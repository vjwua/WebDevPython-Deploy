{
    "openapi": "3.0.0",
    "info": {
      "description": "Flask RESTful API for User Management",
      "version": "1.0.0",
      "title": "User Management API",
      "contact": {
        "email": "seanwasere@gmail.com"
      },
      "license": {
        "name": "MIT",
        "url": "https://opensource.org/licenses/MIT"
      }
    },
    "servers": [
      {
        "url": "/"
      }
    ],
    "tags": [
      {
        "name": "Users",
        "description": "Endpoints for managing users"
      }
    ],
    "paths": {
      "/accounts_api/users": {
        "get": {
          "tags": ["Users"],
          "summary": "Get all users",
          "responses": {
            "200": {
              "description": "OK",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/MultipleUsersSchema"
                  }
                }
              }
            }
          }
        },
        "post": {
          "tags": ["Users"],
          "summary": "Create a new user",
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SingleUserSchema"
                }
              }
            }
          },
          "responses": {
            "201": {
              "description": "User created"
            },
            "400": {
              "description": "Bad request"
            }
          }
        }
      },
      "/accounts_api/user/{id}": {
        "get": {
          "tags": ["Users"],
          "summary": "Get user by ID",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "integer"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/SingleUserSchema"
                  }
                }
              }
            },
            "404": {
              "description": "User not found"
            }
          }
        },
        "put": {
          "tags": ["Users"],
          "summary": "Update user by ID",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "integer"
              }
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SingleUserSchema"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "User updated"
            },
            "400": {
              "description": "Bad request"
            }
          }
        },
        "delete": {
          "tags": ["Users"],
          "summary": "Delete user by ID",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "integer"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "User deleted"
            },
            "404": {
              "description": "User not found"
            }
          }
        }
      }
    },
    "components": {
      "schemas": {
        "SingleUserSchema": {
          "type": "object",
          "properties": {
            "username": {
              "type": "string"
            },
            "email": {
              "type": "string",
              "format": "email"
            },
            "image_file": {
              "type": "string"
            },
            "password": {
              "type": "string"
            }
          }
        },
        "GetSingleUserSchema": {
          "type": "object",
          "properties": {
            "username": {
              "type": "string"
            },
            "email": {
              "type": "string",
              "format": "email"
            },
            "image_file": {
              "type": "string"
            }
          }
        },
        "MultipleUsersSchema": {
          "type": "array",
          "items": {
            "$ref": "#/components/schemas/GetSingleUserSchema"
          }
        }
      }
    }
  }